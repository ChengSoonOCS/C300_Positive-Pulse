<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Quest | Admin</title>
  <link rel="stylesheet" href="/css/style.css">
  <link href="https://fonts.googleapis.com/css2?family=Silkscreen:wght@400&display=swap" rel="stylesheet">
  <style>
    .admin-container {
      max-width: 1000px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .form-container {
      background: white;
      padding: 40px;
      border-radius: 15px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    
    .form-header {
      text-align: center;
      margin-bottom: 30px;
    }
    
    .form-header h1 {
      color: #333;
      margin-bottom: 10px;
    }
    
    .form-group {
      margin-bottom: 25px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: #333;
      font-weight: bold;
    }
    
    .form-group input, .form-group textarea {
      width: 100%;
      padding: 12px;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      font-family: 'Silkscreen', monospace;
      font-size: 1rem;
      box-sizing: border-box;
    }
    
    .form-group textarea {
      height: 150px;
      resize: vertical;
    }
    
    .form-group input:focus, .form-group textarea:focus {
      outline: none;
      border-color: #ff2c58;
    }
    
    .quiz-section {
      background: #f8f9fa;
      padding: 20px;
      border-radius: 12px;
      margin-top: 20px;
    }
    
    .quiz-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    
    .quiz-item {
      background: white;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 15px;
      border: 1px solid #e0e0e0;
    }
    
    .quiz-item-header {
      display: flex;
      justify-content: between;
      align-items: center;
      margin-bottom: 10px;
    }
    
    .form-actions {
      display: flex;
      gap: 15px;
      justify-content: center;
      margin-top: 30px;
    }
    
    .btn {
      padding: 15px 30px;
      border: none;
      border-radius: 8px;
      font-family: 'Silkscreen', monospace;
      font-size: 1rem;
      cursor: pointer;
      text-decoration: none;
      text-align: center;
      transition: transform 0.2s;
    }
    
    .btn:hover {
      transform: translateY(-2px);
    }
    
    .btn-primary {
      background: linear-gradient(135deg, #ff2c58 0%, #ff6b35 100%);
      color: white;
    }
    
    .btn-secondary {
      background: #f8f9fa;
      color: #333;
      border: 2px solid #e0e0e0;
    }
    
    .btn-small {
      padding: 8px 16px;
      font-size: 0.9rem;
    }
    
    .error {
      background: #ffebee;
      color: #c62828;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    
    .help-text {
      font-size: 0.8rem;
      color: #666;
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar.ejs') %>
  
  <div class="admin-container">
    <div class="form-container">
      <div class="form-header">
        <h1>Create New Chapter</h1>
        <p>Add a chapter to <strong><%= module.Title %></strong></p>
      </div>
      
      <% if (error) { %>
        <div class="error"><%= error %></div>
      <% } %>
      
      <form method="POST" action="/admin/modules/<%= module.ModuleID %>/chapters">
        <div class="form-group">
          <label for="title">Chapter Title *</label>
          <input type="text" id="title" name="title" required placeholder="Enter chapter title">
        </div>
        
        <div class="form-group">
          <label for="content">Chapter Content *</label>
          <textarea id="content" name="content" required placeholder="Enter the learning content for this chapter (HTML allowed)"></textarea>
          <div class="help-text">You can use HTML tags for formatting</div>
        </div>
          
        <div class="form-group">
          <label for="chapterOrder">Chapter Order</label>
          <input type="number" id="chapterOrder" name="chapterOrder" placeholder="Chapter order (1, 2, 3...)" value="1" min="1">
          <div class="help-text">The order in which this chapter appears in the module</div>
        </div>
        
        <div class="form-group">
          <label for="tokenReward">Token Reward</label>
          <input type="number" id="tokenReward" name="tokenReward" placeholder="Tokens awarded for completion" value="10" min="0">
          <div class="help-text">Number of tokens users receive for completing this chapter</div>
        </div>
        
        <div class="quiz-section">
          <div class="quiz-header">
            <h3>Quiz Questions</h3>
            <button type="button" class="btn btn-secondary btn-small" onclick="addQuizQuestion()">Add Question</button>
          </div>
          
          <div id="quiz-questions">
            <!-- Quiz questions will be added here -->
          </div>
          
          <input type="hidden" id="quizQuestions" name="quizQuestions" value="[]">
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-primary">Create Chapter</button>
          <a href="/admin/modules/<%= module.ModuleID %>/chapters" class="btn btn-secondary">Cancel</a>
        </div>
      </form>
    </div>
  </div>
  
  <script>
    let questionCount = 0;
    let existingQuizQuestions = [];

    function addQuizQuestion() {
      questionCount++;
      const questionDiv = document.createElement('div');
      questionDiv.className = 'quiz-item';
      questionDiv.id = 'question-' + questionCount;
      
      questionDiv.innerHTML = 
        '<div class="quiz-item-header">' +
          '<h4>Question ' + questionCount + '</h4>' +
          '<button type="button" class="btn btn-secondary btn-small" onclick="removeQuizQuestion(' + questionCount + ')">Remove</button>' +
        '</div>' +
        '<div class="form-group">' +
          '<label>Statement *</label>' +
          '<textarea class="question-text" placeholder="Enter the true/false statement" required></textarea>' +
          '<div class="help-text">Enter a statement that can be answered with True or False</div>' +
        '</div>' +
        '<div class="form-group">' +
          '<label>Correct Answer *</label>' +
          '<select class="question-answer" required>' +
            '<option value="">Select correct answer</option>' +
            '<option value="1">True</option>' +
            '<option value="0">False</option>' +
          '</select>' +
        '</div>';
      
      document.getElementById('quiz-questions').appendChild(questionDiv);
      updateQuizQuestionsField();
    }

    function removeQuizQuestion(questionId) {
      const questionDiv = document.getElementById('question-' + questionId);
      if (questionDiv) {
        questionDiv.remove();
        updateQuizQuestionsField();
      }
    }

    function updateQuizQuestionsField() {
      const questions = [];
      const questionDivs = document.querySelectorAll('.quiz-item');
      
      questionDivs.forEach(function(div, index) {
        const questionText = div.querySelector('.question-text').value.trim();
        const questionAnswer = div.querySelector('.question-answer').value;
        
        if (questionText && questionAnswer !== '') {
          questions.push({
            question: questionText,
            answer: parseInt(questionAnswer) // Convert to integer (1 for true, 0 for false)
          });
        }
      });
      
      document.getElementById('quizQuestions').value = JSON.stringify(questions);
    }

    // Add event listeners to update hidden field when inputs change
    document.addEventListener('input', function(e) {
      if (e.target.classList.contains('question-text') || e.target.classList.contains('question-answer')) {
        updateQuizQuestionsField();
      }
    });

    // Update quiz questions before form submission
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.querySelector('form');
      if (form) {
        form.addEventListener('submit', function(e) {
          // Update quiz questions field before submission
          updateQuizQuestionsField();
        });
      }
    });
  </script>
</body>
</html>
